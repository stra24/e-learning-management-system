<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.everrefine.elms.infrastructure.mapper.UserMapper">
  <delete id="deleteUserById">
    DELETE FROM users
    WHERE
    id = #{id}
  </delete>

  <insert id="createUser" parameterType="com.everrefine.elms.domain.model.user.User">
    INSERT INTO users (
    id,
    email_address,
    password,
    real_name,
    user_name,
    thumbnail_url,
    user_role,
    created_at,
    updated_at
    ) VALUES (
    #{id},
    #{emailAddress.value},
    #{password.value},
    #{realName.value},
    #{userName.value},
    #{thumbnailUrl.value},
    #{userRole.code},
    #{createdAt},
    #{updatedAt}
    )
  </insert>

  <select id="findUserByEmailAddress" resultType="com.everrefine.elms.domain.model.user.User">
    SELECT
    *
    FROM
    users
    WHERE
    email_address = #{emailAddress}
  </select>

  <select id="findUsers" resultType="com.everrefine.elms.domain.model.user.User">
    SELECT
    *
    FROM
    users
    LIMIT #{pageSize} OFFSET #{offset}
  </select>

  <select id="countUsers" resultType="int">
    SELECT COUNT(*) FROM users
  </select>

  <select id="findUserById" resultType="com.everrefine.elms.domain.model.user.User">
    SELECT
    *
    FROM
    users
    WHERE
    id = #{id}
  </select>

  <update id="updateUser"
    parameterType="com.everrefine.elms.domain.model.user.UserForUpdateRequest">
    UPDATE users
    SET
    email_address = #{emailAddress.value},
    real_name = #{realName.value},
    user_name = #{userName.value},
    thumbnail_url = #{thumbnailUrl},
    updated_at = now()
    WHERE id = #{id};
  </update>
</mapper>